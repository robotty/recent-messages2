name: Build

on: [push, pull_request]

jobs:
  check-format-rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
          components: rustfmt
      - run: cargo fmt -- --check
  check-rust:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, windows, macOS]
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
          components: clippy
      - run: cargo check
      - run: cargo clippy
  build-rust-artifacts:
    # only master branch
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, windows, macOS]
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - run: cargo build --release
      - uses: actions/upload-artifact@v2
        with:
          name: app-${{ matrix.os }}
          path: |
            target/release/recent-messages2
            target/release/recent-messages2.exe
  check-format-prettier:
    runs-on: ubuntu-latest
    container: node:14-stretch
    steps:
      - uses: actions/checkout@v2.3.4
      - run: cd web && npm i
      - run: ./web/node_modules/.bin/prettier --check --ignore-path ".gitignore" "**/*.md" "**/*.js" "**/*.tsx" "**/*.yml" "**/*.json"
  build-web:
    runs-on: ubuntu-latest
    container: node:${{ matrix.node }}-stretch
    strategy:
      matrix:
        node: [10, 12, 14]
    steps:
      - uses: actions/checkout@v2.3.4
      - run: cd web && npm i
      - run: cd web && npm run build
      - uses: actions/upload-artifact@v2
        # only master branch
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        with:
          name: web
          path: web/dist/
